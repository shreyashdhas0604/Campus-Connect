version: '3.8'

services:
  # --------------------------
  # Infrastructure Services
  # --------------------------
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}

  # --------------------------
  # Backend Microservices
  # --------------------------
  user-service:
    build:
      context: ../services/user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}

  event-service:
    build:
      context: ../services/event-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}

  club-service:
    build:
      context: ../services/club-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}

  notification-service:
    build:
      context: ../services/notification-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - NODE_ENV=${NODE_ENV}
      - MONGO_URI=${MONGO_URI}

  # --------------------------
  # API Gateway
  # --------------------------
  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - event-service
      - club-service
      - notification-service
    environment:
      - NODE_ENV=${NODE_ENV}

  # --------------------------
  # Frontend (React via Vite)
  # --------------------------
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - NODE_ENV=${NODE_ENV}
      - VITE_API_URL=${VITE_API_URL}

  # --------------------------------
  # Nginx Reverse Proxy Configuration
  # --------------------------------
  nginx:
    image: nginx:stable-alpine
    ports:
      - "8085:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - gateway
      - user-service
      - event-service
      - club-service
      - notification-service


volumes:
  pgdata:
  mongodata:
